/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, HomeScreen as PrismaHomeScreen } from "@prisma/client";

export class HomeScreenServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.HomeScreenCountArgs, "select">
  ): Promise<number> {
    return this.prisma.homeScreen.count(args);
  }

  async homeScreens<T extends Prisma.HomeScreenFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.HomeScreenFindManyArgs>
  ): Promise<PrismaHomeScreen[]> {
    return this.prisma.homeScreen.findMany<Prisma.HomeScreenFindManyArgs>(args);
  }
  async homeScreen<T extends Prisma.HomeScreenFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.HomeScreenFindUniqueArgs>
  ): Promise<PrismaHomeScreen | null> {
    return this.prisma.homeScreen.findUnique(args);
  }
  async createHomeScreen<T extends Prisma.HomeScreenCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.HomeScreenCreateArgs>
  ): Promise<PrismaHomeScreen> {
    return this.prisma.homeScreen.create<T>(args);
  }
  async updateHomeScreen<T extends Prisma.HomeScreenUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.HomeScreenUpdateArgs>
  ): Promise<PrismaHomeScreen> {
    return this.prisma.homeScreen.update<T>(args);
  }
  async deleteHomeScreen<T extends Prisma.HomeScreenDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.HomeScreenDeleteArgs>
  ): Promise<PrismaHomeScreen> {
    return this.prisma.homeScreen.delete(args);
  }
}
