/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CommunitySection as PrismaCommunitySection,
} from "@prisma/client";

export class CommunitySectionServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CommunitySectionCountArgs, "select">
  ): Promise<number> {
    return this.prisma.communitySection.count(args);
  }

  async communitySections<T extends Prisma.CommunitySectionFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.CommunitySectionFindManyArgs>
  ): Promise<PrismaCommunitySection[]> {
    return this.prisma.communitySection.findMany<Prisma.CommunitySectionFindManyArgs>(
      args
    );
  }
  async communitySection<T extends Prisma.CommunitySectionFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.CommunitySectionFindUniqueArgs>
  ): Promise<PrismaCommunitySection | null> {
    return this.prisma.communitySection.findUnique(args);
  }
  async createCommunitySection<T extends Prisma.CommunitySectionCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CommunitySectionCreateArgs>
  ): Promise<PrismaCommunitySection> {
    return this.prisma.communitySection.create<T>(args);
  }
  async updateCommunitySection<T extends Prisma.CommunitySectionUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CommunitySectionUpdateArgs>
  ): Promise<PrismaCommunitySection> {
    return this.prisma.communitySection.update<T>(args);
  }
  async deleteCommunitySection<T extends Prisma.CommunitySectionDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.CommunitySectionDeleteArgs>
  ): Promise<PrismaCommunitySection> {
    return this.prisma.communitySection.delete(args);
  }
}
