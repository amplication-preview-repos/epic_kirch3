/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PrayerSection as PrismaPrayerSection } from "@prisma/client";

export class PrayerSectionServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PrayerSectionCountArgs, "select">
  ): Promise<number> {
    return this.prisma.prayerSection.count(args);
  }

  async prayerSections<T extends Prisma.PrayerSectionFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.PrayerSectionFindManyArgs>
  ): Promise<PrismaPrayerSection[]> {
    return this.prisma.prayerSection.findMany<Prisma.PrayerSectionFindManyArgs>(
      args
    );
  }
  async prayerSection<T extends Prisma.PrayerSectionFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.PrayerSectionFindUniqueArgs>
  ): Promise<PrismaPrayerSection | null> {
    return this.prisma.prayerSection.findUnique(args);
  }
  async createPrayerSection<T extends Prisma.PrayerSectionCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PrayerSectionCreateArgs>
  ): Promise<PrismaPrayerSection> {
    return this.prisma.prayerSection.create<T>(args);
  }
  async updatePrayerSection<T extends Prisma.PrayerSectionUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PrayerSectionUpdateArgs>
  ): Promise<PrismaPrayerSection> {
    return this.prisma.prayerSection.update<T>(args);
  }
  async deletePrayerSection<T extends Prisma.PrayerSectionDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.PrayerSectionDeleteArgs>
  ): Promise<PrismaPrayerSection> {
    return this.prisma.prayerSection.delete(args);
  }
}
