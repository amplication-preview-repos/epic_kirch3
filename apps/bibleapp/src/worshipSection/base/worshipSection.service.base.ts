/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, WorshipSection as PrismaWorshipSection } from "@prisma/client";

export class WorshipSectionServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.WorshipSectionCountArgs, "select">
  ): Promise<number> {
    return this.prisma.worshipSection.count(args);
  }

  async worshipSections<T extends Prisma.WorshipSectionFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.WorshipSectionFindManyArgs>
  ): Promise<PrismaWorshipSection[]> {
    return this.prisma.worshipSection.findMany<Prisma.WorshipSectionFindManyArgs>(
      args
    );
  }
  async worshipSection<T extends Prisma.WorshipSectionFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.WorshipSectionFindUniqueArgs>
  ): Promise<PrismaWorshipSection | null> {
    return this.prisma.worshipSection.findUnique(args);
  }
  async createWorshipSection<T extends Prisma.WorshipSectionCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.WorshipSectionCreateArgs>
  ): Promise<PrismaWorshipSection> {
    return this.prisma.worshipSection.create<T>(args);
  }
  async updateWorshipSection<T extends Prisma.WorshipSectionUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.WorshipSectionUpdateArgs>
  ): Promise<PrismaWorshipSection> {
    return this.prisma.worshipSection.update<T>(args);
  }
  async deleteWorshipSection<T extends Prisma.WorshipSectionDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.WorshipSectionDeleteArgs>
  ): Promise<PrismaWorshipSection> {
    return this.prisma.worshipSection.delete(args);
  }
}
