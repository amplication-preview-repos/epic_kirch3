/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ProfileSection as PrismaProfileSection } from "@prisma/client";

export class ProfileSectionServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ProfileSectionCountArgs, "select">
  ): Promise<number> {
    return this.prisma.profileSection.count(args);
  }

  async profileSections<T extends Prisma.ProfileSectionFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProfileSectionFindManyArgs>
  ): Promise<PrismaProfileSection[]> {
    return this.prisma.profileSection.findMany<Prisma.ProfileSectionFindManyArgs>(
      args
    );
  }
  async profileSection<T extends Prisma.ProfileSectionFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProfileSectionFindUniqueArgs>
  ): Promise<PrismaProfileSection | null> {
    return this.prisma.profileSection.findUnique(args);
  }
  async createProfileSection<T extends Prisma.ProfileSectionCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProfileSectionCreateArgs>
  ): Promise<PrismaProfileSection> {
    return this.prisma.profileSection.create<T>(args);
  }
  async updateProfileSection<T extends Prisma.ProfileSectionUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProfileSectionUpdateArgs>
  ): Promise<PrismaProfileSection> {
    return this.prisma.profileSection.update<T>(args);
  }
  async deleteProfileSection<T extends Prisma.ProfileSectionDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProfileSectionDeleteArgs>
  ): Promise<PrismaProfileSection> {
    return this.prisma.profileSection.delete(args);
  }
}
